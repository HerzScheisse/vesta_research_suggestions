<?php
//adapted from webtrees.js: webtrees.initializeTomSelect 
?>

<script>
webtrees.initializeTomSelectSWS = function (element) {
    var defaultUrl = element.dataset.defaultUrl;
    var adjustedUrl = element.dataset.adjustedUrl;
    
    //used in
    //a) 'structured' dialogs (single-fact or multi-fact)
    //b) unstructured SOUR:DATA:EVEN dialog
    //c) unstructured edit-record dialog (for top-level _LOC, otherwise hidden functionality)
    
    //in unstructured dialogs with multiple tags of same type, we have to count overall elements 
    //in order to assign X:DATE to X:PLAC:_LOC properly
    
    //(in structured dialogs we could simply determine X by id (such as 'fact-') and just use that, like this
    //var fact = element.closest('[id^=fact-]');
    
    //element.id has structure 'id-235a7975c6194772bd348f4b5740af11-INDI-CHR-SOUR'
    //we're looking for 'id-4393f90138404a5f92c0523de58d2810-INDI-CHR-DATE' and '...-PLAC'
    
    let lio1 = element.id.lastIndexOf("INDI-");
    let lio2 = element.id.lastIndexOf("FAM-");
    let lio3 = element.id.lastIndexOf("SOUR-"); //for top level source
    let lio4 = element.id.lastIndexOf("_LOC-"); //for top level shared place
    let lio = (lio1 === -1)?((lio2 === -1)?((lio3 === -1)?lio4:lio3):lio2):lio1;
    let skip = (lio1 === -1)?((lio2 === -1)?5:4):5;
    let tag = (lio === -1)?null:element.id.substring(lio+skip).replace("-SOUR", "");
    //console.log("sp for "+tag);
    
    var allSour = document.querySelectorAll('[id^=id][id$='+tag+'-SOUR]');
    var overallCount = allSour.length;
    var overallPosition = -1;
    for (let i = 0; i < allSour.length; i++) {
        if (allSour[i] === element) {
            overallPosition = i;
        }
    }
    
    //console.log("sp count: "+overallCount);
    //console.log("sp position: "+overallPosition);
 
    var allPlac = document.querySelectorAll('[id^=id][id$='+tag+'-PLAC]');
    var allDate = document.querySelectorAll('[id^=id][id$='+tag+'-DATE]');
   
    if ((allPlac.length === 1) && (allDate.length === 1)) {
        //always ok (structured dialog with single PLAC and DATE, may have multiple SOUR which all refer the same DATE/PLAC)
        overallCount = 1;
        overallPosition = 0;
    }
    
    var ts = null;
    var options = {};

    let plugins = ['dropdown_input', 'virtual_scroll'];
    if (element.multiple) {
      plugins.push('remove_button');
    } else if (!element.required) {
      plugins.push('clear_button');
    }

    options = {
      plugins: plugins,
      render: {
        item: (data, escape) => '<div>' + data.text + '</div>',
        option: (data, escape) => '<div>' + data.text + '</div>',
      },
      maxOptions: false,
      firstUrl: query => 1,
      onDropdownOpen:function() {

        if ((tag !== null) && (allPlac.length === overallCount) && (allDate.length === overallCount) && (overallPosition !== -1)) {            
            var ownPlacInput = allPlac[overallPosition];
            var ownDateInput = allDate[overallPosition];
            
            var placValue = ownPlacInput.value;
            var dateValue = ownDateInput.value;

            if (dateValue && placValue) {
                <?php
                //preload:'focus' does the same, but unconditionally
                //TODO: no_results doesn't render here! explicit ts.refreshOptions(); doesn't help
                ?>
                ts.load('');            
            }
        } //else DATE hidden, apparently
      },
      load: function (query, callback) {
        <?php
        //careful, calling this resets the pagination, i.e. do not call more than once!
        //https://github.com/orchidjs/tom-select/blob/master/src/plugins/virtual_scroll/plugin.ts
        //function is actually intended to manage the full url, but may just as well be used for pagination only!
        ?>
        var curr = this.getUrl(query);
        //console.log(curr);
        var next = curr+1;

        var thisUrl = defaultUrl;

        if (query === '') {
            <?php
            //note: we should get here only though onDropdownOpen, otherwise not triggered (e.g. by clearing input)
            ?>

            <?php
            //the view is used in several other places, e.g. via the favorites module, and in the 'merge records' dialog,
            //and as a standalone fact (which is not distinguishable here!).
            //in these cases, or if required inputs aren't set, use standard functionality!
            ?>

            if ((tag !== null) && (allPlac.length === overallCount) && (allDate.length === overallCount) && (overallPosition !== -1)) {

                var tagValue = tag;
                
                var ownPlacInput = allPlac[overallPosition];
                var ownDateInput = allDate[overallPosition];
            
                var placValue = ownPlacInput.value;
                var dateValue = ownDateInput.value;

                if (dateValue && placValue) {
                    
                    var allGov = document.querySelectorAll('[id^=id][id$='+tag+'-PLAC-_GOV]');
                    var allLoc = document.querySelectorAll('[id^=id][id$='+tag+'-PLAC-_LOC]');

                    var gedcom = "1 "+ tagValue + "\n2 DATE " + dateValue + "\n2 PLAC " + placValue;
                    
                    if (allGov.length === overallCount) {
                        var ownGovInput = allGov[overallPosition];
                        var govValue = ownGovInput.value;
                        gedcom += "\n3 _GOV " + govValue;
                    } 
                    if (allLoc.length === overallCount) {
                        var ownLocInput = allLoc[overallPosition];
                        var locValue = ownLocInput.value;
                        gedcom += "\n3 _LOC @" + locValue + "@";
                    }

                    thisUrl = adjustedUrl;
                    query = gedcom;
                }
            }
        }

        <?php
        //safer to use api. Do not encodeURIComponent, that's done internally!
        ?>
        var url_ = new URL(thisUrl);
        url_.searchParams.set('page', curr);
        url_.searchParams.set('query', query);

        var fullUrl = url_.href;
        //console.log(fullUrl);

        fetch(fullUrl)
          .then(response => response.json())
          .then(json => {
            if (json.nextUrl !== null) {
                <?php
                //we paginate ourselves, and use json.nextUrl only as a flag
                ?>
                this.setNextUrl(query, next);
            }

            callback(json.data);
          })
          .catch(callback);
      },
    };

    ts = new TomSelect(element, options);
    return ts;
}
</script>



